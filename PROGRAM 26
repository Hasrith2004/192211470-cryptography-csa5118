#include <stdio.h>
#include <stdlib.h>

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int mod_inverse(int a, int m) {
    int m0 = m, t, q;
    int x0 = 0, x1 = 1;

    if (m == 1)
        return 0;

    while (a > 1) {
        q = a / m;
        t = m;
        m = a % m;
        a = t;
        t = x0;
        x0 = x1 - q * x0;
        x1 = t;
    }

    if (x1 < 0)
        x1 += m0;

    return x1;
}

int main() {
    int e_original = 65537; 
    int d_original = 12345; 
    int n_original = 3233;  

    printf("Original Public Key (e, n): (%d, %d)\n", e_original, n_original);
    printf("Original Private Key (d): %d\n", d_original);

    printf("\nLeaked private key. Generating a new key pair...\n");

    int e_new = 65537; 
    int d_new = mod_inverse(e_new, n_original);

    printf("New Public Key (e, n): (%d, %d)\n", e_new, n_original);
    printf("New Private Key (d): %d\n", d_new);

    return 0;
}
OUTPUT:
Original Public Key (e, n): (65537, 3233)
Original Private Key (d): 12345

Leaked private key. Generating a new key pair...
New Public Key (e, n): (65537, 3233)
New Private Key (d): 435
